version: '3'

services:
  basic:
    build: .
    command: npm run dev
    volumes:
      - ./db.js:/app/db.js
      - ./routes.json:/app/routes.json
      - ./middleware.js:/app/middleware.js:delegated
    ports:
      - 9999:80
    environment:
      VIRTUAL_HOST: json-server.docker

  typescript:
    build: .
    command: npm run dev
    volumes:
      - ./examples/typescript/db.ts:/app/db.ts
      - ./examples/typescript/middleware.ts:/app/middleware.ts:delegated
    ports:
      - 9998:80
    environment:
      VIRTUAL_HOST: typescript.json-server.docker

  json-db:
    build: .
    command: npm run dev
    volumes:
      - ./examples/json/db.json:/app/db.json
    ports:
      - 9997:80
    environment:
      VIRTUAL_HOST: typescript.json-server.docker

  middlewares:
    build: .
    command: npm run dev
    volumes:
      - ./examples/middlewares/db.json:/app/db.json
      - ./examples/middlewares/middleware_a.ts:/app/middleware_a.ts:delegated
      - ./examples/middlewares/middleware_b.ts:/app/middleware_b.ts:delegated
    ports:
      - 9996:80
    environment:
      VIRTUAL_HOST: middlewares.json-server.docker
      MIDDLEWARES: 'middleware_a.js middleware_b.js'

  deps:
    build: .
    command: npm run dev
    volumes:
      - ./examples/deps/db.js:/app/db.js
    ports:
      - 9995:80
    environment:
      VIRTUAL_HOST: middlewares.json-server.docker
      DEPENDENCIES: 'chance@1 node-emoji@1'

  dags:
    build: .
    command: npm run dev
    volumes:
      - ./examples/support-files/db.ts:/app/db.ts
      - ./examples/support-files/fixtures:/app/fixtures
    ports:
      - 9994:80
    environment:
      VIRTUAL_HOST: dags.json-server.docker
